# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - build
  - internal-pub
  - release

variables:
  GOPROXY: https://goproxy.cn,direct
  GOPATH: "$CI_PROJECT_DIR/.go"
  GOBIN: "$CI_PROJECT_DIR/.go/bin"

compose-build-saas:
  image: iseki0/go-deno:latest
  stage: build
  artifacts:
    expire_in: 3 day
    paths:
      - murphysec-saas-linux-amd64
      - murphysec-saas-windows-amd64.exe
      - murphysec-saas-darwin-amd64
      - murphysec-saas-linux-amd64.sha256
      - murphysec-saas-windows-amd64.exe.sha256
      - murphysec-saas-darwin-amd64.sha256
  cache:
    key: cli-build-cache-0041
    paths:
      - .go/pkg/mod/
  before_script:
    - mkdir -p .go
  script:
    - export
    - go test -v ./...
    - deno run --allow-all gobuild.ts saas
    - cd out
    - chmod 0755 *
    - find -type f | xargs -I {} sh -c "sha256sum {} > {}.sha256"
    - cat *.sha256
    - sha256sum -c *.sha256
    - mv * ../
    - cd ..
  only:
    refs:
      - /^v\d+.*/

compose-build:
  image: iseki0/go-deno:latest
  stage: build
  artifacts:
    expire_in: 1 day
    paths:
      - murphysec-linux-amd64
      - murphysec-windows-amd64.exe
      - murphysec-darwin-amd64
      - murphysec-linux-amd64.sha256
      - murphysec-windows-amd64.exe.sha256
      - murphysec-darwin-amd64.sha256
  cache:
    key: cli-build-cache-0041
    paths:
      - .go/pkg/mod/
  before_script:
    - mkdir -p .go
  script:
    - export
    - go test -v ./...
    - deno run --allow-all gobuild.ts
    - cd out
    - chmod 0755 *
    - find -type f | xargs -I {} sh -c "sha256sum {} > {}.sha256"
    - cat *.sha256
    - sha256sum -c *.sha256
    - mv * ../
    - cd ..

internal-cos-upload:
  image: iseki0/go-deno:latest
  stage: internal-pub
  cache:
    key: cos-upload-3838
    paths:
      - .go
  before_script:
    - mkdir -p .go
  script:
    - export PATH=$PATH:$GOBIN
    - go install github.com/iseki0/cos-uploader@v1.1.0
    - cos-uploader --local murphysec-linux-amd64 --remote /client/$CI_BUILD_REF_NAME/murphysec-linux-amd64
    - cos-uploader --local murphysec-darwin-amd64 --remote /client/$CI_BUILD_REF_NAME/murphysec-darwin-amd64
    - cos-uploader --local murphysec-windows-amd64.exe --remote /client/$CI_BUILD_REF_NAME/murphysec-windows-amd64.exe
    - export UPLOAD_FILENAME=murphysec-windows-amd64.exe
    - deno run --allow-all feishu-push.js

